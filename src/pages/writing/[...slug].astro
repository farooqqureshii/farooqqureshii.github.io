---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { formatDate, getWordCount, getReadingTime } from "../../lib/utils";

export const prerender = true;

export async function getStaticPaths() {
  const writing = await getCollection("writing");
  return writing.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;

// Add defensive programming to handle undefined post or post.data
if (!post) {
  throw new Error(`Post not found for slug: ${Astro.params.slug}`);
}

if (!post.data) {
  throw new Error(`Post data is undefined for slug: ${Astro.params.slug}. Post object: ${JSON.stringify(post, null, 2)}`);
}

const { title, date, description } = post.data;
const { Content } = await post.render();

// Get the raw content for word count calculation
const rawContent = post.body;
const wordCount = getWordCount(rawContent);
const readingTime = getReadingTime(wordCount);

// Get all posts for navigation
const allPosts = await getCollection("writing");
const sortedPosts = allPosts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
const currentIndex = sortedPosts.findIndex(p => p.slug === post.slug);
const nextPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;
---

<Layout title={title} description={description}>
  <main>
    <p class="mb-5 text-lg">
      {title}
    </p>
    <p class="mb-1">
      {formatDate(date)} | {wordCount} words, {readingTime} minute read
    </p>
    <article>
      <Content />
    </article>
    
    <!-- Navigation -->
    <div class="mt-8">
      <div class="flex justify-between items-center">
        <a href="/writing" class="text-black dark:text-white no-underline hover:no-underline focus:no-underline flex items-center" style="text-decoration: none !important; color: inherit !important; font-size: 0.875rem !important;">
          <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-1"><path d="M19 12H5M12 19l-7-7 7-7"/></svg>
          All Writing
        </a>
        {nextPost && (
          <a href={`/writing/${nextPost.slug}`} class="text-black dark:text-white no-underline hover:no-underline focus:no-underline flex items-center" style="text-decoration: none !important; color: inherit !important; font-size: 0.875rem !important;">
            Next: {nextPost.data.title}
            <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="ml-1"><path d="M5 12h14M12 5l7 7-7 7"/></svg>
          </a>
        )}
      </div>
    </div>
  </main>
</Layout> 