---
import { SITE_DESCRIPTION, SITE_TITLE } from "../../consts";
import Layout from "../../layouts/Layout.astro";

const projects = [
  {
    title: "uoee.rocks",
    description: "Course visualizer and search, for uOttawa EE students",
    gif: "/static/uoee.rocks-1755366145491.webm",
    link: "https://uoee.rocks/",
    github: "https://github.com/farooqqureshii/uoee.rocks",
    technologies: ["React", "TypeScript", "Tailwind", "Framer Motion"],
    type: "video"
  },
  {
    title: "okbutpitchit",
    description: "Code to Pitch-Ready slides, in an Instant",
    gif: "/static/okbutpitchit_vid.webm",
    link: "https://okbutpitchit.vercel.app/",
    github: "https://github.com/farooqqureshii/okbutpitchit",
    technologies: ["Next.js", "React", "Tailwind", "Node", "Llama 3"],
    type: "video"
  },
  {
    title: "Substack Case Study",
    description: "Product/strategy case study for Substack growth",
    image: "/static/Marketing_Spaces.png",
    link: "/writing/substack/",
    technologies: ["PM", "Strategy", "UI/UX", "Marketing"],
    type: "image"
  },
  {
    title: "Voltus",
    description: "RLC circuit visualization, analysis, and simulation",
    gif: "/static/voltus.webm",
    link: "https://voltus.streamlit.app/",
    github: "https://github.com/farooqqureshii/voltus",
    technologies: ["Streamlit", "Plotly", "NumPy", "SciPy", "Pandas"],
    type: "video"
  },
  {
    title: "Code Compass",
    description: "Understand any GitHub repo and find beginner-friendly issues, fast",
    gif: "/static/codecompass_vid.webm",
    link: "https://trycodecompass.vercel.app/",
    github: "https://github.com/farooqqureshii/code-compass",
    technologies: ["Next.js", "TypeScript", "Tailwind", "Groq Llama 3", "GitHub REST API"],
    type: "video"
  },
  {
    title: "uOttaHack | Director",
    description: "Leading the team behind Ottawa's largest tech event",
    image: "/static/uottahack.jpg",
    link: "https://www.uottahack.ca/",
    technologies: ["PM", "UI/UX", "Figma", "Software", "Sales"],
    type: "image"
  },
  {
    title: "EchoScope",
    description: "Use AI to uncover sentiment, bias, and diversity in YouTube comments",
    gif: "/static/echoscope_vid.webm",
    link: "https://echoscope.vercel.app/",
    github: "https://github.com/farooqqureshii/echoscope",
    technologies: ["TypeScript", "Node", "TensorFlow", "Sentiment Analysis"],
    type: "video"
  },
  {
    title: "Analyzing and predicting housing prices in London",
    description: "Smarter housing price predictions with machine learning",
    gif: "/static/london_vid.webm",
    link: "https://farooq.craft.me/write-up",
    technologies: ["Pandas", "Matplotlib", "Scikit-learn", "SHAP", "LightGBM"],
    type: "video"
  },
  {
    title: "NLP for Google Calendar",
    description: "Conversational AI for Google Calendar using NLP",
    gif: "/static/nlp_vid.webm",
    technologies: ["LangChain", "Rasa", "Typescript", "OAuth"],
    type: "video"
  },
  {
    title: "Notion2Todoist",
    description: "Syncing Tasks from Notion to Todoist",
    gif: "/static/notion api video.webm",
    technologies: ["REST API", "Bash", "Scripting", "Python"],
    type: "video"
  }
];
---

<Layout title="Projects / Farooq Qureshi" description={SITE_DESCRIPTION}>
  <main>
    <div class="grid grid-cols-1 gap-12">
      {projects.map((project) => (
        <div class="flex flex-col items-start">
          <div class="media-section w-full overflow-visible relative mb-4">
            {project.type === "video" ? (
              <video 
                data-src={project.gif}
                muted 
                loop 
                playsinline 
                class="w-full aspect-[4/3] object-cover h-80 bg-zinc-100 dark:bg-zinc-900 lazy-video" 
                style="touch-action: manipulation;"
              >
                Your browser does not support the video tag.
              </video>
            ) : project.type === "youtube" ? (
              <div class="w-full aspect-[16/9] h-80 bg-zinc-100 dark:bg-zinc-900 overflow-hidden flex items-center justify-center">
                <iframe
                  title={project.title}
                  frameborder="0"
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                  allowfullscreen
                  class="w-[120%] h-[120%] min-w-full min-h-full object-cover rounded-xl -ml-[10%] -mt-[10%]"
                  style="object-fit: cover;"
                ></iframe>
              </div>
            ) : (
              <img
                src={project.image}
                alt={project.title}
                class="w-full aspect-[4/3] object-cover h-80 bg-zinc-100 dark:bg-zinc-900"
              />
            )}
          </div>
          <div class="w-full space-y-2">
            <div class="font-bold text-xl text-zinc-900 dark:text-zinc-100">{project.title}</div>
            <div class="text-zinc-600 dark:text-zinc-400 text-base leading-snug">{project.description}</div>
            {project.technologies && (
              <div class="text-zinc-500 dark:text-zinc-400 text-sm tracking-wide">{project.technologies.join(", ")}</div>
            )}
            <div class="flex gap-4 pt-1">
              {project.github && (
                <a href={project.github} target="_blank" rel="noopener noreferrer" class="text-zinc-600 dark:text-zinc-400 hover:italic transition-all">
                  <span style="white-space:nowrap;">
                    <svg width="12" height="12" viewBox="0 0 12 12" style="display:inline;vertical-align:baseline;" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false"><path d="M3 9L9 3M9 3H4M9 3V8" stroke="currentColor" stroke-width="1" fill="none" stroke-linecap="round" stroke-linejoin="round"/></svg>
                    github
                  </span>
                </a>
              )}
              {project.link && (
                <a href={project.link} target="_blank" rel="noopener noreferrer" class="text-zinc-600 dark:text-zinc-400 hover:italic transition-all">
                  <span style="white-space:nowrap;">
                    <svg width="12" height="12" viewBox="0 0 12 12" style="display:inline;vertical-align:baseline;" xmlns="http://www.w3.org/2000/svg" aria-hidden="true" focusable="false"><path d="M3 9L9 3M9 3H4M9 3V8" stroke="currentColor" stroke-width="1" fill="none" stroke-linecap="round" stroke-linejoin="round"/></svg>
                    link
                  </span>
                </a>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </main>
</Layout>
<style>
@media (max-width: 640px) {
  .media-section > img, .media-section > video {
    height: 48vw !important;
    min-height: 120px;
    max-height: 320px;
  }
}
.media-section {
  overflow: visible;
}
</style>

<script>
  // Lazy load videos when they come into view
  const lazyVideos = document.querySelectorAll('.lazy-video');
  
  const videoObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        const video = entry.target;
        if (video instanceof HTMLVideoElement) {
          const src = video.getAttribute('data-src');
          
          if (src && !video.src) {
            video.src = src;
            video.autoplay = true;
            videoObserver.unobserve(video);
          }
        }
      }
    });
  }, {
    rootMargin: '50px 0px', // Start loading 50px before video comes into view
    threshold: 0.1
  });

  lazyVideos.forEach(video => {
    videoObserver.observe(video);
  });
</script> 
