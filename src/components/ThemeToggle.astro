<button
  id="theme-toggle"
  class="theme-toggle-animate flex items-center justify-center w-6 h-6 transition-colors duration-200 ease-in-out hover:opacity-80"
  aria-label="Toggle theme"
  type="button"
>
  <span class="sr-only">Toggle theme</span>
  
  <!-- Rotating line -->
  <div class="relative w-4 h-4">
    <span
      id="theme-line"
      class="absolute w-4 h-0.5 transition-all duration-300 ease-in-out"
      style="background-color: #24837B; top: 50%; left: 50%; transform: translate(-50%, -50%) rotate(0deg);"
    ></span>
  </div>
  
  <style>
    /* Light theme: flexoki colors */
    html:not(.dark):not(.flexoki) #theme-line {
      background-color: #24837B !important;
    }
    
    /* Flexoki theme: black line */
    html.flexoki #theme-line {
      background-color: #000000 !important;
    }
    
    /* Dark theme: white line */
    html.dark:not(.flexoki) #theme-line {
      background-color: #ffffff !important;
    }
  </style>
</button>

<script>
  const setListener = () => {
    const button = document.getElementById("theme-toggle");
    let rot = 0; // rotation counter
    
    const rotateThis = (element: HTMLElement, nR: number) => {
      let aR;
      aR = rot % 360;
      if (aR < 0) { aR += 360; }
      if (aR < 180 && (nR > (aR + 180))) { rot -= 360; }
      if (aR >= 180 && (nR <= (aR - 180))) { rot += 360; }
      rot += (nR - aR);
      element.style.transform = `translate(-50%, -50%) rotate(${rot}deg)`;
    };
    
    button?.addEventListener("click", () => {
      // Play sound effect
      const audio = new Audio("/static/sound.mp3");
      audio.volume = 0.3;
      audio.play().catch(e => console.log("Audio play failed:", e));
      
      // Toggle themes
      const html = document.documentElement;
      
      if (!html.classList.contains("dark") && !html.classList.contains("flexoki")) {
        // From light to flexoki
        html.classList.add("flexoki");
      } else if (html.classList.contains("flexoki")) {
        // From flexoki to dark
        html.classList.remove("flexoki");
        html.classList.add("dark");
      } else if (html.classList.contains("dark")) {
        // From dark back to light
        html.classList.remove("dark");
      }
      
      // Rotate the line to specific positions
      const line = document.getElementById("theme-line");
      if (line) {
        let targetRotation = 0;
        
        if (!html.classList.contains("dark") && !html.classList.contains("flexoki")) {
          // Light theme - horizontal
          targetRotation = 0;
        } else if (html.classList.contains("flexoki")) {
          // Flexoki theme - angled
          targetRotation = 45;
        } else if (html.classList.contains("dark")) {
          // Dark theme - vertical
          targetRotation = 90;
        }
        
        rotateThis(line, targetRotation);
      }
    });
  };
  setListener();
  document.addEventListener("astro:after-swap", setListener);
</script>
