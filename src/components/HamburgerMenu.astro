---
// Hamburger menu component with horizontal slide-out navigation
---

<div class="hamburger-menu">
  <!-- Hamburger Button -->
  <button 
    id="hamburger-button" 
    class="hamburger-button"
    aria-label="Toggle navigation menu"
    aria-expanded="false"
  >
    <span class="hamburger-line"></span>
    <span class="hamburger-line"></span>
    <span class="hamburger-line"></span>
  </button>

  <!-- Navigation Overlay -->
  <div id="nav-overlay" class="nav-overlay">
    <nav class="nav-menu">
      <a href="/about" class="nav-link">About</a>
      <a href="/projects" class="nav-link">Projects</a>
      <a href="/writing" class="nav-link">Writing</a>
      <a href="/artifacts" class="nav-link">Artifacts</a>
      <a href="/other/images" class="nav-link">Images</a>
      <a href="/other" class="nav-link">Other</a>
    </nav>
  </div>
</div>

<style>
  .hamburger-menu {
    position: relative;
  }

  /* Hamburger Button */
  .hamburger-button {
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    width: 24px;
    height: 18px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1001;
    transition: all 0.3s ease;
  }

  .hamburger-line {
    width: 100%;
    height: 2px;
    background-color: #000;
    transition: all 0.3s ease;
    transform-origin: center;
  }

  html.dark .hamburger-line {
    background-color: #fff;
  }

  html.flexoki .hamburger-line {
    background-color: #100F0F;
  }

  /* Hamburger Animation */
  .hamburger-button[aria-expanded="true"] .hamburger-line:nth-child(1) {
    transform: rotate(45deg) translate(5px, 5px);
  }

  .hamburger-button[aria-expanded="true"] .hamburger-line:nth-child(2) {
    opacity: 0;
  }

  .hamburger-button[aria-expanded="true"] .hamburger-line:nth-child(3) {
    transform: rotate(-45deg) translate(7px, -6px);
  }

  /* Navigation Overlay */
  .nav-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }

  html.dark .nav-overlay {
    background-color: rgba(0, 0, 0, 0.7);
  }

  .nav-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  /* Navigation Menu */
  .nav-menu {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    gap: 2rem;
    text-align: center;
    padding: 2rem;
  }

  .nav-link {
    font-size: 1.5rem;
    font-weight: 400;
    color: #000;
    text-decoration: none;
    transition: all 0.3s ease;
    padding: 0.5rem 1rem;
    border-radius: 8px;
  }

  html.dark .nav-link {
    color: #fff;
  }

  html.flexoki .nav-link {
    color: #100F0F;
  }

  .nav-link:hover {
    color: #1d4ed8;
    background-color: rgba(29, 78, 216, 0.1);
    transform: translateY(-2px);
  }

  html.dark .nav-link:hover {
    color: #7dd3fc;
    background-color: rgba(125, 211, 252, 0.1);
  }

  html.flexoki .nav-link:hover {
    color: #24837B;
    background-color: rgba(36, 131, 123, 0.1);
  }

  /* Responsive adjustments */
  @media (max-width: 640px) {
    .nav-menu {
      gap: 1.5rem;
    }
    
    .nav-link {
      font-size: 1.25rem;
    }
  }

  @media (min-width: 1024px) {
    .nav-menu {
      flex-direction: row;
      gap: 3rem;
    }
    
    .nav-link {
      font-size: 1.25rem;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const hamburgerButton = document.getElementById('hamburger-button');
    const navOverlay = document.getElementById('nav-overlay');
    const navLinks = document.querySelectorAll('.nav-link');

    // Check if elements exist
    if (!hamburgerButton || !navOverlay) {
      console.warn('Hamburger menu elements not found');
      return;
    }

    // Toggle menu
    hamburgerButton.addEventListener('click', function() {
      const isExpanded = hamburgerButton.getAttribute('aria-expanded') === 'true';
      
      hamburgerButton.setAttribute('aria-expanded', String(!isExpanded));
      navOverlay.classList.toggle('active');
      
      // Prevent body scroll when menu is open
      document.body.style.overflow = !isExpanded ? 'hidden' : '';
    });

    // Close menu when clicking overlay
    navOverlay.addEventListener('click', function(e) {
      if (e.target === navOverlay) {
        hamburgerButton.setAttribute('aria-expanded', 'false');
        navOverlay.classList.remove('active');
        document.body.style.overflow = '';
      }
    });

    // Close menu when clicking nav links
    navLinks.forEach(link => {
      link.addEventListener('click', function() {
        if (hamburgerButton && navOverlay) {
          hamburgerButton.setAttribute('aria-expanded', 'false');
          navOverlay.classList.remove('active');
          document.body.style.overflow = '';
        }
      });
    });

    // Close menu on escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && navOverlay && navOverlay.classList.contains('active')) {
        if (hamburgerButton) {
          hamburgerButton.setAttribute('aria-expanded', 'false');
          navOverlay.classList.remove('active');
          document.body.style.overflow = '';
        }
      }
    });
  });
</script>
